<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drepair.mapper.OrderMapperCustom">
    <!-- resultMap -->
    <resultMap id="BaseResultMap" type="com.drepair.po.OrderCustom" >
        <id column="order_id" jdbcType="INTEGER" property="orderId" />
	    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
	    <result column="order_state" jdbcType="INTEGER" property="orderState" />
	    <result column="order_start_time" jdbcType="TIMESTAMP" property="orderStartTime" />
	    <result column="order_over_time" jdbcType="TIMESTAMP" property="orderOverTime" />
	    <result column="hmr_id" jdbcType="INTEGER" property="hmrId" />
	    <result column="order_room" jdbcType="VARCHAR" property="orderRoom" />
	    <result column="order_sort" jdbcType="INTEGER" property="orderSort" />
	    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
	    <result column="repairer_id" jdbcType="INTEGER" property="repairerId" />
	    <result column="order_info" jdbcType="LONGVARCHAR" property="orderInfo" />
    </resultMap>
  	
    <!-- 自定义添加报修订单 -->
    <insert id="addOrder" parameterType="com.drepair.po.OrderCustom">
        INSERT INTO `order` 
        (
	        `order_info`
	        <if test="stuId != null">
	        , `stu_id`
	        </if>
	        <if test="hmrId != null">
	        , `hmr_id`
	        </if>
	        , `order_state`
	        , `order_start_time`
	        , `order_room`
	        , `order_sort`
        ) 
        VALUES 
        (
	        #{orderInfo,jdbcType=LONGVARCHAR}
	        <if test="stuId != null">
	        , #{stuId,jdbcType=VARCHAR}
	        </if>
	        <if test="hmrId != null">
	        , #{hmrId,jdbcType=INTEGER}
	        </if>
	        , #{orderState,jdbcType=INTEGER}
	        , #{orderStartTime,jdbcType=TIMESTAMP}
	        , #{orderRoom,jdbcType=VARCHAR}
	        , #{orderSort,jdbcType=INTEGER}
        )
    </insert>
    
    <!-- 获取当前新增报修订单的自增ID -->
    <select id="getNowAddOrderId" resultType="java.lang.Integer">
        select @@IDENTITY
    </select>
    
    <!-- 学生根据状态查询所有报修订单总记录数 -->
    <select id="findAllCountByStu" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from `order` WHERE ISNULL(hmr_id) and order_state=#{0}
    </select>
    
    <!-- 宿管根据状态查询所有报修订单总记录数 -->
    <select id="findAllCountByHmr" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from `order` WHERE ISNULL(stu_id) and order_state=#{0}
    </select>
    
    <!-- 学生根据状态查询全部报修订单 -->
    <select id="findAllOrderByStu" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE ISNULL(hmr_id) and order_state=#{0} LIMIT #{1}, #{2}
    </select>
    
    <!-- 宿管根据状态查询全部报修订单 -->
    <select id="findAllOrderByHmr" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE ISNULL(stu_id) and order_state=#{0} LIMIT #{1}, #{2}
    </select>
    
    <!-- 将报修订单的状态修改为2，即审核通过 -->
    <update id="passOrder" parameterType="java.lang.Integer">
        UPDATE `order` SET `order_state`='2', `order_sort`=#{2}, `admin_id`=#{1} WHERE (`order_id`=#{0})
    </update>
    
    <!-- 将报修订单的状态修改为3，即审核不通过 -->
    <update id="failOrder" parameterType="com.drepair.po.OrderCustom">
        UPDATE `order` SET 
		  `order_state` = #{orderState,jdbcType=INTEGER}
		  ,`order_over_time` = #{orderOverTime,jdbcType=TIMESTAMP}
		WHERE (`order_id`=#{orderId,jdbcType=INTEGER})
    </update>
    
    <!-- 分页查询所有审核通过的报修订单（根据订单级别降序） -->
    <select id="findOrderByPass" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE order_state=2 ORDER BY `order_sort` DESC LIMIT #{0}, #{1}
    </select>
    
    <!-- 通过ID查询报修订单 -->
    <select id="findOrderById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE order_id=#{orderId,jdbcType=INTEGER}
    </select>
    
    <!-- 维修员抢单(order_state=11即维修中,repairer_id赋值) -->
    <update id="repairerGetOrder" parameterType="java.lang.Integer">
        UPDATE `order` SET `order_state`='11', `repairer_id`=#{0} WHERE (`order_id`=#{1})
    </update>
    
    <!-- 报修端根据订单状态获取已经提交的订单 -->
    <select id="getCommittedOrders" parameterType="com.drepair.po.OrderCustom" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE 
        <if test="stuId != null">
            stu_id=#{stuId,jdbcType=VARCHAR} 
        </if>
        <if test="hmrId != null">
            hmr_id=#{hmrId,jdbcType=INTEGER}
        </if>
        and order_state=#{orderState,jdbcType=INTEGER}
    </select>
    
    <!-- 抢单端根据订单状态获取自己的全部订单 -->
    <select id="getRepairOrders" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE repairer_id=#{1} and order_state=#{0}
    </select>
    
    <!-- 更新订单信息 -->
    <update id="updateById" parameterType="com.drepair.po.OrderCustom">
        UPDATE `order` SET 
		<if test="orderState != null">
		  `order_state` = #{orderState,jdbcType=INTEGER},
		</if>
		<if test="orderSort != null">
		  `order_sort` = #{orderSort,jdbcType=INTEGER},
		</if>
		<if test="orderInfo != null">
		  `order_info` = #{orderInfo,jdbcType=LONGVARCHAR},
		</if>
		<if test="adminId != null">
		  `admin_id` = #{adminId,jdbcType=INTEGER},
		</if>
		<if test="orderRoom != null">
		  `order_room` = #{orderRoom,jdbcType=VARCHAR}
		</if>
		WHERE (`order_id`=#{orderId,jdbcType=INTEGER})
    </update>
    
    <!-- 维修员提交已维修的订单 -->
    <update id="orderIsRepair" parameterType="com.drepair.po.OrderCustom">
        UPDATE `order` SET `order_state`=#{orderState,jdbcType=INTEGER},`order_over_time`=#{orderOverTime,jdbcType=TIMESTAMP} WHERE (`order_id`=#{orderId,jdbcType=INTEGER} and `repairer_id`=#{repairerId,jdbcType=INTEGER})
    </update>
    
    <!-- 通过订单ID删除订单 -->
    <delete id="delById" parameterType="int">
        DELETE FROM `order` WHERE (`order_id`=#{0})
    </delete>
    
    <!-- 通过学生ID查询订单信息 -->
    <select id="findByStuId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE stu_id=#{0}
    </select>
    
    <!-- 通过宿管ID查询订单信息 -->
    <select id="findByHmrId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE hmr_id=#{0}
    </select>
    
    <!-- 通过维修员ID将所有订单的维修员ID为null -->
    <update id="setNullByRepairerId" parameterType="java.lang.Integer">
        UPDATE `order` SET `repairer_id`=NULL WHERE (`repairer_id`=#{0})
    </update>
</mapper>