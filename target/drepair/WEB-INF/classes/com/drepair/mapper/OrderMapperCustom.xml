<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drepair.mapper.OrderMapperCustom">
    <!-- resultMap -->
    <resultMap id="BaseResultMap" type="com.drepair.po.OrderCustom" >
        <id column="order_id" jdbcType="INTEGER" property="orderId" />
	    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
	    <result column="order_state" jdbcType="INTEGER" property="orderState" />
	    <result column="order_start_time" jdbcType="TIMESTAMP" property="orderStartTime" />
	    <result column="order_over_time" jdbcType="TIMESTAMP" property="orderOverTime" />
	    <result column="hmr_id" jdbcType="INTEGER" property="hmrId" />
	    <result column="order_room" jdbcType="VARCHAR" property="orderRoom" />
	    <result column="order_sort" jdbcType="INTEGER" property="orderSort" />
	    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
	    <result column="repairer_id" jdbcType="INTEGER" property="repairerId" />
	    <result column="order_info" jdbcType="LONGVARCHAR" property="orderInfo" />
    </resultMap>
  	
    <!-- 自定义添加报修订单 -->
    <insert id="addOrder" parameterType="com.drepair.po.OrderCustom">
        INSERT INTO `order` 
        (`order_info`, `stu_id`, `order_state`, `order_start_time`, `order_room`) 
        VALUES 
        (#{orderInfo,jdbcType=LONGVARCHAR}, #{stuId,jdbcType=VARCHAR}, #{orderState,jdbcType=INTEGER}, 
        #{orderStartTime,jdbcType=TIMESTAMP}, #{orderRoom,jdbcType=VARCHAR})
    </insert>
    
    <!-- 获取当前新增报修订单的自增ID -->
    <select id="getNowAddOrderId" resultType="java.lang.Integer">
        select @@IDENTITY
    </select>
    
    <!-- 查询所有报修订单总记录数 -->
    <select id="findAllCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from `order`
    </select>
    
    <!-- 分页查询全部报修订单 -->
    <select id="findAllOrder" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` LIMIT #{0}, #{1}
    </select>
    
    <!-- 将报修订单的状态修改为2，即审核通过 -->
    <update id="passOrder" parameterType="java.lang.Integer">
        UPDATE `order` SET `order_state`='2' WHERE (`order_id`=#{orderId,jdbcType=INTEGER})
    </update>
    
    <!-- 将报修订单的状态修改为3，即审核不通过 -->
    <update id="failOrder" parameterType="java.lang.Integer">
        UPDATE `order` SET `order_state`='3' WHERE (`order_id`=#{orderId,jdbcType=INTEGER})
    </update>
    
    <!-- 分页查询审核通过的全部报修订单，即order_state=2 -->
    <select id="findOrderByPass" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE order_state=2 LIMIT #{0}, #{1}
    </select>
    
    <!-- 通过ID查询报修订单 -->
    <select id="findOrderById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE order_id=#{orderId,jdbcType=INTEGER}
    </select>
    
    <!-- 维修员抢单(order_state=11即维修中,repairer_id赋值) -->
    <update id="repairerGetOrder" parameterType="java.lang.Integer">
        UPDATE `order` SET `order_state`='11', `repairer_id`=#{0} WHERE (`order_id`=#{1})
    </update>
    
    <!-- 报修端根据订单状态获取已经提交的订单 -->
    <select id="getCommittedOrders" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE stu_id=#{1} and order_state=#{0}
    </select>
    
    <!-- 抢单端根据订单状态获取自己的全部订单 -->
    <select id="getRepairOrders" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM `order` WHERE repairer_id=#{1} and order_state=#{0}
    </select>
    
</mapper>